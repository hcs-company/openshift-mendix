// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package expenses.proxies;

public class Conversion
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject conversionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Expenses.Conversion";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FromAmmount("FromAmmount"),
		ToAmmount("ToAmmount"),
		ToAmmountFormatted("ToAmmountFormatted"),
		Conversion_To("Expenses.Conversion_To"),
		Conversion_From("Expenses.Conversion_From"),
		Conversion_User("Expenses.Conversion_User");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Conversion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Expenses.Conversion"));
	}

	protected Conversion(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject conversionMendixObject)
	{
		if (conversionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Expenses.Conversion", conversionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Expenses.Conversion");

		this.conversionMendixObject = conversionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Conversion.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static expenses.proxies.Conversion initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return expenses.proxies.Conversion.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static expenses.proxies.Conversion initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new expenses.proxies.Conversion(context, mendixObject);
	}

	public static expenses.proxies.Conversion load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return expenses.proxies.Conversion.initialize(context, mendixObject);
	}

	public static java.util.List<expenses.proxies.Conversion> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<expenses.proxies.Conversion> result = new java.util.ArrayList<expenses.proxies.Conversion>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Expenses.Conversion" + xpathConstraint))
			result.add(expenses.proxies.Conversion.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of FromAmmount
	 */
	public final java.math.BigDecimal getFromAmmount()
	{
		return getFromAmmount(getContext());
	}

	/**
	 * @param context
	 * @return value of FromAmmount
	 */
	public final java.math.BigDecimal getFromAmmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.FromAmmount.toString());
	}

	/**
	 * Set value of FromAmmount
	 * @param fromammount
	 */
	public final void setFromAmmount(java.math.BigDecimal fromammount)
	{
		setFromAmmount(getContext(), fromammount);
	}

	/**
	 * Set value of FromAmmount
	 * @param context
	 * @param fromammount
	 */
	public final void setFromAmmount(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal fromammount)
	{
		getMendixObject().setValue(context, MemberNames.FromAmmount.toString(), fromammount);
	}

	/**
	 * @return value of ToAmmount
	 */
	public final java.math.BigDecimal getToAmmount()
	{
		return getToAmmount(getContext());
	}

	/**
	 * @param context
	 * @return value of ToAmmount
	 */
	public final java.math.BigDecimal getToAmmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.ToAmmount.toString());
	}

	/**
	 * Set value of ToAmmount
	 * @param toammount
	 */
	public final void setToAmmount(java.math.BigDecimal toammount)
	{
		setToAmmount(getContext(), toammount);
	}

	/**
	 * Set value of ToAmmount
	 * @param context
	 * @param toammount
	 */
	public final void setToAmmount(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal toammount)
	{
		getMendixObject().setValue(context, MemberNames.ToAmmount.toString(), toammount);
	}

	/**
	 * @return value of ToAmmountFormatted
	 */
	public final java.lang.String getToAmmountFormatted()
	{
		return getToAmmountFormatted(getContext());
	}

	/**
	 * @param context
	 * @return value of ToAmmountFormatted
	 */
	public final java.lang.String getToAmmountFormatted(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ToAmmountFormatted.toString());
	}

	/**
	 * Set value of ToAmmountFormatted
	 * @param toammountformatted
	 */
	public final void setToAmmountFormatted(java.lang.String toammountformatted)
	{
		setToAmmountFormatted(getContext(), toammountformatted);
	}

	/**
	 * Set value of ToAmmountFormatted
	 * @param context
	 * @param toammountformatted
	 */
	public final void setToAmmountFormatted(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String toammountformatted)
	{
		getMendixObject().setValue(context, MemberNames.ToAmmountFormatted.toString(), toammountformatted);
	}

	/**
	 * @return value of Conversion_To
	 */
	public final expenses.proxies.Currency getConversion_To() throws com.mendix.core.CoreException
	{
		return getConversion_To(getContext());
	}

	/**
	 * @param context
	 * @return value of Conversion_To
	 */
	public final expenses.proxies.Currency getConversion_To(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		expenses.proxies.Currency result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Conversion_To.toString());
		if (identifier != null)
			result = expenses.proxies.Currency.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Conversion_To
	 * @param conversion_to
	 */
	public final void setConversion_To(expenses.proxies.Currency conversion_to)
	{
		setConversion_To(getContext(), conversion_to);
	}

	/**
	 * Set value of Conversion_To
	 * @param context
	 * @param conversion_to
	 */
	public final void setConversion_To(com.mendix.systemwideinterfaces.core.IContext context, expenses.proxies.Currency conversion_to)
	{
		if (conversion_to == null)
			getMendixObject().setValue(context, MemberNames.Conversion_To.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Conversion_To.toString(), conversion_to.getMendixObject().getId());
	}

	/**
	 * @return value of Conversion_From
	 */
	public final expenses.proxies.Currency getConversion_From() throws com.mendix.core.CoreException
	{
		return getConversion_From(getContext());
	}

	/**
	 * @param context
	 * @return value of Conversion_From
	 */
	public final expenses.proxies.Currency getConversion_From(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		expenses.proxies.Currency result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Conversion_From.toString());
		if (identifier != null)
			result = expenses.proxies.Currency.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Conversion_From
	 * @param conversion_from
	 */
	public final void setConversion_From(expenses.proxies.Currency conversion_from)
	{
		setConversion_From(getContext(), conversion_from);
	}

	/**
	 * Set value of Conversion_From
	 * @param context
	 * @param conversion_from
	 */
	public final void setConversion_From(com.mendix.systemwideinterfaces.core.IContext context, expenses.proxies.Currency conversion_from)
	{
		if (conversion_from == null)
			getMendixObject().setValue(context, MemberNames.Conversion_From.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Conversion_From.toString(), conversion_from.getMendixObject().getId());
	}

	/**
	 * @return value of Conversion_User
	 */
	public final system.proxies.User getConversion_User() throws com.mendix.core.CoreException
	{
		return getConversion_User(getContext());
	}

	/**
	 * @param context
	 * @return value of Conversion_User
	 */
	public final system.proxies.User getConversion_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Conversion_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Conversion_User
	 * @param conversion_user
	 */
	public final void setConversion_User(system.proxies.User conversion_user)
	{
		setConversion_User(getContext(), conversion_user);
	}

	/**
	 * Set value of Conversion_User
	 * @param context
	 * @param conversion_user
	 */
	public final void setConversion_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User conversion_user)
	{
		if (conversion_user == null)
			getMendixObject().setValue(context, MemberNames.Conversion_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Conversion_User.toString(), conversion_user.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return conversionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final expenses.proxies.Conversion that = (expenses.proxies.Conversion) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Expenses.Conversion";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
