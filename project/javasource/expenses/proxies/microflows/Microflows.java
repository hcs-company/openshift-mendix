// This file was generated by Mendix Modeler 7.3.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package expenses.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Expenses module
	public static boolean afterStartUp(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "Expenses.AfterStartUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void calculateConversion(IContext context, expenses.proxies.Conversion _conversion)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Conversion", _conversion == null ? null : _conversion.getMendixObject());
			Core.execute(context, "Expenses.CalculateConversion", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changeMyInfo(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.ChangeMyInfo", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changePasswordForm_Change(IContext context, expenses.proxies.PasswordData _employeePasswordData)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("EmployeePasswordData", _employeePasswordData == null ? null : _employeePasswordData.getMendixObject());
			Core.execute(context, "Expenses.ChangePasswordForm_Change", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void changePasswordForm_Open(IContext context, expenses.proxies.Employee _employee)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Employee", _employee == null ? null : _employee.getMendixObject());
			Core.execute(context, "Expenses.ChangePasswordForm_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static expenses.proxies.Conversion conversion_New(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Expenses.Conversion_New", params);
			return result == null ? null : expenses.proxies.Conversion.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createDefaultCurrencies(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.CreateDefaultCurrencies", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createDefaultExpenseTypes(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.CreateDefaultExpenseTypes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void createOrUpdateDefaultData(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.CreateOrUpdateDefaultData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static expenses.proxies.Currency currency_GetCompanyDefault(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Expenses.Currency_GetCompanyDefault", params);
			return result == null ? null : expenses.proxies.Currency.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void desktop_Expense_RejectForm_Open(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Desktop_Expense_RejectForm_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void employee_Delete(IContext context, expenses.proxies.Employee _employee)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Employee", _employee == null ? null : _employee.getMendixObject());
			Core.execute(context, "Expenses.Employee_Delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static expenses.proxies.Employee employee_GetByUserId(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Expenses.Employee_GetByUserId", params);
			return result == null ? null : expenses.proxies.Employee.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String employee_GetRole(IContext context, expenses.proxies.Employee _employee)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Employee", _employee == null ? null : _employee.getMendixObject());
			return (java.lang.String)Core.execute(context, "Expenses.Employee_GetRole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void employee_New(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.Employee_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void employee_UpdateTotals(IContext context, expenses.proxies.Employee _employee)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Employee", _employee == null ? null : _employee.getMendixObject());
			Core.execute(context, "Expenses.Employee_UpdateTotals", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_AfterCommit(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_AfterCommit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_Approve(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_Approve", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static expenses.proxies.Expense expense_Create(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Expenses.Expense_Create", params);
			return result == null ? null : expenses.proxies.Expense.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean expense_Delete(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Expenses.Expense_Delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_Geo_Located(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_Geo_Located", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_New(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.Expense_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_Receipt_View(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_Receipt_View", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_Receipt_View_Close(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.Expense_Receipt_View_Close", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_ReceiptAdded(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_ReceiptAdded", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_Reimbursed(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_Reimbursed", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_Reject(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_Reject", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_SaveAndSubmit(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_SaveAndSubmit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean expense_Submit(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "Expenses.Expense_Submit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expense_View_Open(IContext context, expenses.proxies.Expense _expense)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Expense", _expense == null ? null : _expense.getMendixObject());
			Core.execute(context, "Expenses.Expense_View_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void expenses_DeleteAll(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.Expenses_DeleteAll", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.Double findOutRate(IContext context, java.lang.String _rateTo, java.lang.String _rateFrom)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RateTo", _rateTo);
			params.put("RateFrom", _rateFrom);
			return (java.lang.Double)Core.execute(context, "Expenses.FindOutRate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void manager_New(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.Manager_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void onFirstLogin(IContext context, java.lang.String _userIdentity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("UserIdentity", _userIdentity);
			Core.execute(context, "Expenses.OnFirstLogin", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void openHomePage(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.OpenHomePage", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void signOut_Open(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.SignOut_Open", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static expenses.proxies.TempUser tempUser_Get(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "Expenses.TempUser_Get", params);
			return result == null ? null : expenses.proxies.TempUser.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void updateDemoUsers(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "Expenses.UpdateDemoUsers", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}